// Generated from src/G4/MindLang.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class MindLangLexer extends Lexer {
	public static readonly LET = 1;
	public static readonly WHILE = 2;
	public static readonly PRINT = 3;
	public static readonly IF = 4;
	public static readonly ELSE = 5;
	public static readonly FUNCTION = 6;
	public static readonly FOR = 7;
	public static readonly RETURN = 8;
	public static readonly BREAK = 9;
	public static readonly SWITCH = 10;
	public static readonly CASE = 11;
	public static readonly DEFAULT = 12;
	public static readonly ON = 13;
	public static readonly TRY = 14;
	public static readonly CATCH = 15;
	public static readonly THROW = 16;
	public static readonly PROCESSOR = 17;
	public static readonly IDENTIFIER = 18;
	public static readonly NUMBER = 19;
	public static readonly STRING = 20;
	public static readonly PLUS = 21;
	public static readonly MINUS = 22;
	public static readonly MULT = 23;
	public static readonly DIV = 24;
	public static readonly MOD = 25;
	public static readonly ASSIGN = 26;
	public static readonly PLUS_ASSIGN = 27;
	public static readonly EQ = 28;
	public static readonly LT = 29;
	public static readonly GT = 30;
	public static readonly LE = 31;
	public static readonly GE = 32;
	public static readonly SEMICOLON = 33;
	public static readonly COMMA = 34;
	public static readonly COLON = 35;
	public static readonly LPAREN = 36;
	public static readonly RPAREN = 37;
	public static readonly LBRACE = 38;
	public static readonly RBRACE = 39;
	public static readonly LBRACKET = 40;
	public static readonly RBRACKET = 41;
	public static readonly DOT = 42;
	public static readonly INCREMENT = 43;
	public static readonly DECREMENT = 44;
	public static readonly NOT = 45;
	public static readonly LINE_COMMENT = 46;
	public static readonly BLOCK_COMMENT = 47;
	public static readonly WHITESPACE = 48;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LET", "WHILE", "PRINT", "IF", "ELSE", "FUNCTION", "FOR", "RETURN", "BREAK", 
		"SWITCH", "CASE", "DEFAULT", "ON", "TRY", "CATCH", "THROW", "PROCESSOR", 
		"IDENTIFIER", "NUMBER", "STRING", "PLUS", "MINUS", "MULT", "DIV", "MOD", 
		"ASSIGN", "PLUS_ASSIGN", "EQ", "LT", "GT", "LE", "GE", "SEMICOLON", "COMMA", 
		"COLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
		"DOT", "INCREMENT", "DECREMENT", "NOT", "LINE_COMMENT", "BLOCK_COMMENT", 
		"WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'let'", "'while'", "'print'", "'if'", "'else'", "'function'", 
		"'for'", "'return'", "'break'", "'switch'", "'case'", "'default'", "'on'", 
		"'try'", "'catch'", "'throw'", "'processor'", undefined, undefined, undefined, 
		"'+'", "'-'", "'*'", "'/'", "'%'", "'='", "'+='", "'=='", "'<'", "'>'", 
		"'<='", "'>='", "';'", "','", "':'", "'('", "')'", "'{'", "'}'", "'['", 
		"']'", "'.'", "'++'", "'--'", "'!'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LET", "WHILE", "PRINT", "IF", "ELSE", "FUNCTION", "FOR", "RETURN", 
		"BREAK", "SWITCH", "CASE", "DEFAULT", "ON", "TRY", "CATCH", "THROW", "PROCESSOR", 
		"IDENTIFIER", "NUMBER", "STRING", "PLUS", "MINUS", "MULT", "DIV", "MOD", 
		"ASSIGN", "PLUS_ASSIGN", "EQ", "LT", "GT", "LE", "GE", "SEMICOLON", "COMMA", 
		"COLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
		"DOT", "INCREMENT", "DECREMENT", "NOT", "LINE_COMMENT", "BLOCK_COMMENT", 
		"WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(MindLangLexer._LITERAL_NAMES, MindLangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return MindLangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(MindLangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "MindLang.g4"; }

	// @Override
	public get ruleNames(): string[] { return MindLangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return MindLangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return MindLangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return MindLangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x022\u013B\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t" +
		"\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x07\x13\xC9\n\x13\f\x13\x0E\x13\xCC\v\x13\x03\x14\x06\x14\xCF\n\x14\r" +
		"\x14\x0E\x14\xD0\x03\x14\x03\x14\x06\x14\xD5\n\x14\r\x14\x0E\x14\xD6\x05" +
		"\x14\xD9\n\x14\x03\x15\x03\x15\x07\x15\xDD\n\x15\f\x15\x0E\x15\xE0\v\x15" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19" +
		"\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03" +
		"!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'" +
		"\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03" +
		"-\x03.\x03.\x03/\x03/\x03/\x03/\x07/\u0120\n/\f/\x0E/\u0123\v/\x03/\x03" +
		"/\x030\x030\x030\x030\x070\u012B\n0\f0\x0E0\u012E\v0\x030\x030\x030\x03" +
		"0\x030\x031\x061\u0136\n1\r1\x0E1\u0137\x031\x031\x04\xDE\u012C\x02\x02" +
		"2\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02" +
		")Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022\x03\x02\x07\x05" +
		"\x02C\\aac|\x06\x022;C\\aac|\x03\x022;\x04\x02\f\f\x0F\x0F\x05\x02\v\f" +
		"\x0F\x0F\"\"\x02\u0142\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02" +
		"\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02" +
		"\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03" +
		"\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02" +
		"\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02" +
		"U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02" +
		"\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02" +
		"\x03c\x03\x02\x02\x02\x05g\x03\x02\x02\x02\x07m\x03\x02\x02\x02\ts\x03" +
		"\x02\x02\x02\vv\x03\x02\x02\x02\r{\x03\x02\x02\x02\x0F\x84\x03\x02\x02" +
		"\x02\x11\x88\x03\x02\x02\x02\x13\x8F\x03\x02\x02\x02\x15\x95\x03\x02\x02" +
		"\x02\x17\x9C\x03\x02\x02\x02\x19\xA1\x03\x02\x02\x02\x1B\xA9\x03\x02\x02" +
		"\x02\x1D\xAC\x03\x02\x02\x02\x1F\xB0\x03\x02\x02\x02!\xB6\x03\x02\x02" +
		"\x02#\xBC\x03\x02\x02\x02%\xC6\x03\x02\x02\x02\'\xCE\x03\x02\x02\x02)" +
		"\xDA\x03\x02\x02\x02+\xE3\x03\x02\x02\x02-\xE5\x03\x02\x02\x02/\xE7\x03" +
		"\x02\x02\x021\xE9\x03\x02\x02\x023\xEB\x03\x02\x02\x025\xED\x03\x02\x02" +
		"\x027\xEF\x03\x02\x02\x029\xF2\x03\x02\x02\x02;\xF5\x03\x02\x02\x02=\xF7" +
		"\x03\x02\x02\x02?\xF9\x03\x02\x02\x02A\xFC\x03\x02\x02\x02C\xFF\x03\x02" +
		"\x02\x02E\u0101\x03\x02\x02\x02G\u0103\x03\x02\x02\x02I\u0105\x03\x02" +
		"\x02\x02K\u0107\x03\x02\x02\x02M\u0109\x03\x02\x02\x02O\u010B\x03\x02" +
		"\x02\x02Q\u010D\x03\x02\x02\x02S\u010F\x03\x02\x02\x02U\u0111\x03\x02" +
		"\x02\x02W\u0113\x03\x02\x02\x02Y\u0116\x03\x02\x02\x02[\u0119\x03\x02" +
		"\x02\x02]\u011B\x03\x02\x02\x02_\u0126\x03\x02\x02\x02a\u0135\x03\x02" +
		"\x02\x02cd\x07n\x02\x02de\x07g\x02\x02ef\x07v\x02\x02f\x04\x03\x02\x02" +
		"\x02gh\x07y\x02\x02hi\x07j\x02\x02ij\x07k\x02\x02jk\x07n\x02\x02kl\x07" +
		"g\x02\x02l\x06\x03\x02\x02\x02mn\x07r\x02\x02no\x07t\x02\x02op\x07k\x02" +
		"\x02pq\x07p\x02\x02qr\x07v\x02\x02r\b\x03\x02\x02\x02st\x07k\x02\x02t" +
		"u\x07h\x02\x02u\n\x03\x02\x02\x02vw\x07g\x02\x02wx\x07n\x02\x02xy\x07" +
		"u\x02\x02yz\x07g\x02\x02z\f\x03\x02\x02\x02{|\x07h\x02\x02|}\x07w\x02" +
		"\x02}~\x07p\x02\x02~\x7F\x07e\x02\x02\x7F\x80\x07v\x02\x02\x80\x81\x07" +
		"k\x02\x02\x81\x82\x07q\x02\x02\x82\x83\x07p\x02\x02\x83\x0E\x03\x02\x02" +
		"\x02\x84\x85\x07h\x02\x02\x85\x86\x07q\x02\x02\x86\x87\x07t\x02\x02\x87" +
		"\x10\x03\x02\x02\x02\x88\x89\x07t\x02\x02\x89\x8A\x07g\x02\x02\x8A\x8B" +
		"\x07v\x02\x02\x8B\x8C\x07w\x02\x02\x8C\x8D\x07t\x02\x02\x8D\x8E\x07p\x02" +
		"\x02\x8E\x12\x03\x02\x02\x02\x8F\x90\x07d\x02\x02\x90\x91\x07t\x02\x02" +
		"\x91\x92\x07g\x02\x02\x92\x93\x07c\x02\x02\x93\x94\x07m\x02\x02\x94\x14" +
		"\x03\x02\x02\x02\x95\x96\x07u\x02\x02\x96\x97\x07y\x02\x02\x97\x98\x07" +
		"k\x02\x02\x98\x99\x07v\x02\x02\x99\x9A\x07e\x02\x02\x9A\x9B\x07j\x02\x02" +
		"\x9B\x16\x03\x02\x02\x02\x9C\x9D\x07e\x02\x02\x9D\x9E\x07c\x02\x02\x9E" +
		"\x9F\x07u\x02\x02\x9F\xA0\x07g\x02\x02\xA0\x18\x03\x02\x02\x02\xA1\xA2" +
		"\x07f\x02\x02\xA2\xA3\x07g\x02\x02\xA3\xA4\x07h\x02\x02\xA4\xA5\x07c\x02" +
		"\x02\xA5\xA6\x07w\x02\x02\xA6\xA7\x07n\x02\x02\xA7\xA8\x07v\x02\x02\xA8" +
		"\x1A\x03\x02\x02\x02\xA9\xAA\x07q\x02\x02\xAA\xAB\x07p\x02\x02\xAB\x1C" +
		"\x03\x02\x02\x02\xAC\xAD\x07v\x02\x02\xAD\xAE\x07t\x02\x02\xAE\xAF\x07" +
		"{\x02\x02\xAF\x1E\x03\x02\x02\x02\xB0\xB1\x07e\x02\x02\xB1\xB2\x07c\x02" +
		"\x02\xB2\xB3\x07v\x02\x02\xB3\xB4\x07e\x02\x02\xB4\xB5\x07j\x02\x02\xB5" +
		" \x03\x02\x02\x02\xB6\xB7\x07v\x02\x02\xB7\xB8\x07j\x02\x02\xB8\xB9\x07" +
		"t\x02\x02\xB9\xBA\x07q\x02\x02\xBA\xBB\x07y\x02\x02\xBB\"\x03\x02\x02" +
		"\x02\xBC\xBD\x07r\x02\x02\xBD\xBE\x07t\x02\x02\xBE\xBF\x07q\x02\x02\xBF" +
		"\xC0\x07e\x02\x02\xC0\xC1\x07g\x02\x02\xC1\xC2\x07u\x02\x02\xC2\xC3\x07" +
		"u\x02\x02\xC3\xC4\x07q\x02\x02\xC4\xC5\x07t\x02\x02\xC5$\x03\x02\x02\x02" +
		"\xC6\xCA\t\x02\x02\x02\xC7\xC9\t\x03\x02\x02\xC8\xC7\x03\x02\x02\x02\xC9" +
		"\xCC\x03\x02\x02\x02\xCA\xC8\x03\x02\x02\x02\xCA\xCB\x03\x02\x02\x02\xCB" +
		"&\x03\x02\x02\x02\xCC\xCA\x03\x02\x02\x02\xCD\xCF\t\x04\x02\x02\xCE\xCD" +
		"\x03\x02\x02\x02\xCF\xD0\x03\x02\x02\x02\xD0\xCE\x03\x02\x02\x02\xD0\xD1" +
		"\x03\x02\x02\x02\xD1\xD8\x03\x02\x02\x02\xD2\xD4\x070\x02\x02\xD3\xD5" +
		"\t\x04\x02\x02\xD4\xD3\x03\x02\x02\x02\xD5\xD6\x03\x02\x02\x02\xD6\xD4" +
		"\x03\x02\x02\x02\xD6\xD7\x03\x02\x02\x02\xD7\xD9\x03\x02\x02\x02\xD8\xD2" +
		"\x03\x02\x02\x02\xD8\xD9\x03\x02\x02\x02\xD9(\x03\x02\x02\x02\xDA\xDE" +
		"\x07$\x02\x02\xDB\xDD\v\x02\x02\x02\xDC\xDB\x03\x02\x02\x02\xDD\xE0\x03" +
		"\x02\x02\x02\xDE\xDF\x03\x02\x02\x02\xDE\xDC\x03\x02\x02\x02\xDF\xE1\x03" +
		"\x02\x02\x02\xE0\xDE\x03\x02\x02\x02\xE1\xE2\x07$\x02\x02\xE2*\x03\x02" +
		"\x02\x02\xE3\xE4\x07-\x02\x02\xE4,\x03\x02\x02\x02\xE5\xE6\x07/\x02\x02" +
		"\xE6.\x03\x02\x02\x02\xE7\xE8\x07,\x02\x02\xE80\x03\x02\x02\x02\xE9\xEA" +
		"\x071\x02\x02\xEA2\x03\x02\x02\x02\xEB\xEC\x07\'\x02\x02\xEC4\x03\x02" +
		"\x02\x02\xED\xEE\x07?\x02\x02\xEE6\x03\x02\x02\x02\xEF\xF0\x07-\x02\x02" +
		"\xF0\xF1\x07?\x02\x02\xF18\x03\x02\x02\x02\xF2\xF3\x07?\x02\x02\xF3\xF4" +
		"\x07?\x02\x02\xF4:\x03\x02\x02\x02\xF5\xF6\x07>\x02\x02\xF6<\x03\x02\x02" +
		"\x02\xF7\xF8\x07@\x02\x02\xF8>\x03\x02\x02\x02\xF9\xFA\x07>\x02\x02\xFA" +
		"\xFB\x07?\x02\x02\xFB@\x03\x02\x02\x02\xFC\xFD\x07@\x02\x02\xFD\xFE\x07" +
		"?\x02\x02\xFEB\x03\x02\x02\x02\xFF\u0100\x07=\x02\x02\u0100D\x03\x02\x02" +
		"\x02\u0101\u0102\x07.\x02\x02\u0102F\x03\x02\x02\x02\u0103\u0104\x07<" +
		"\x02\x02\u0104H\x03\x02\x02\x02\u0105\u0106\x07*\x02\x02\u0106J\x03\x02" +
		"\x02\x02\u0107\u0108\x07+\x02\x02\u0108L\x03\x02\x02\x02\u0109\u010A\x07" +
		"}\x02\x02\u010AN\x03\x02\x02\x02\u010B\u010C\x07\x7F\x02\x02\u010CP\x03" +
		"\x02\x02\x02\u010D\u010E\x07]\x02\x02\u010ER\x03\x02\x02\x02\u010F\u0110" +
		"\x07_\x02\x02\u0110T\x03\x02\x02\x02\u0111\u0112\x070\x02\x02\u0112V\x03" +
		"\x02\x02\x02\u0113\u0114\x07-\x02\x02\u0114\u0115\x07-\x02\x02\u0115X" +
		"\x03\x02\x02\x02\u0116\u0117\x07/\x02\x02\u0117\u0118\x07/\x02\x02\u0118" +
		"Z\x03\x02\x02\x02\u0119\u011A\x07#\x02\x02\u011A\\\x03\x02\x02\x02\u011B" +
		"\u011C\x071\x02\x02\u011C\u011D\x071\x02\x02\u011D\u0121\x03\x02\x02\x02" +
		"\u011E\u0120\n\x05\x02\x02\u011F\u011E\x03\x02\x02\x02\u0120\u0123\x03" +
		"\x02\x02\x02\u0121\u011F\x03\x02\x02\x02\u0121\u0122\x03\x02\x02\x02\u0122" +
		"\u0124\x03\x02\x02\x02\u0123\u0121\x03\x02\x02\x02\u0124\u0125\b/\x02" +
		"\x02\u0125^\x03\x02\x02\x02\u0126\u0127\x071\x02\x02\u0127\u0128\x07," +
		"\x02\x02\u0128\u012C\x03\x02\x02\x02\u0129\u012B\v\x02\x02\x02\u012A\u0129" +
		"\x03\x02\x02\x02\u012B\u012E\x03\x02\x02\x02\u012C\u012D\x03\x02\x02\x02" +
		"\u012C\u012A\x03\x02\x02\x02\u012D\u012F\x03\x02\x02\x02\u012E\u012C\x03" +
		"\x02\x02\x02\u012F\u0130\x07,\x02\x02\u0130\u0131\x071\x02\x02\u0131\u0132" +
		"\x03\x02\x02\x02\u0132\u0133\b0\x02\x02\u0133`\x03\x02\x02\x02\u0134\u0136" +
		"\t\x06\x02\x02\u0135\u0134\x03\x02\x02\x02\u0136\u0137\x03\x02\x02\x02" +
		"\u0137\u0135\x03\x02\x02\x02\u0137\u0138\x03\x02\x02\x02\u0138\u0139\x03" +
		"\x02\x02\x02\u0139\u013A\b1\x02\x02\u013Ab\x03\x02\x02\x02\v\x02\xCA\xD0" +
		"\xD6\xD8\xDE\u0121\u012C\u0137\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MindLangLexer.__ATN) {
			MindLangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(MindLangLexer._serializedATN));
		}

		return MindLangLexer.__ATN;
	}

}

